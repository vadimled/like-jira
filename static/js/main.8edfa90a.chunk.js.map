{"version":3,"sources":["components/Portal/Portal.js","store/actionTypes.js","store/actions/dbActions.js","components/NewIssue/NewIssue.js","components/Header/Header.js","components/Spinner/Spinner.js","components/Ticket/Ticket.js","components/EditTicket/EditTicket.js","components/TicketsBucket/TicketsBucket.js","pages/Tickets/Tickets.js","pages/Login/Login.js","components/App.js","utils/dbHandlers.js","store/reducers/dbReducer.js","store/reducers/createReducer.js","store/reducers/index.js","store/axios-orders.js","Api/Api.js","store/saga/sagas.js","store/saga/index.js","index.js"],"names":["portalRoot","document","getElementById","Portal","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","el","createElement","classList","add","elin","appendChild","removeChild","children","ReactDom","createPortal","Component","DB_FETCH","DB_FETCH_SUCCESS","DB_FETCH_FAILED","DB_ADD_NEW_ENTRY","DB_ADD_NEW_ENTRY_SUCCESS","DB_ADD_NEW_ENTRY_FAILED","DB_EDIT_ITEM","DB_EDIT_ITEM_SUCCESS","DB_EDIT_ITEM_FAILED","SET_LOADING","ON_FIND_TICKETS","editDBItem","data","type","types","payload","NewIssue","submitForm","e","preventDefault","obj","onCancel","input","target","hasOwnProperty","name","value","Date","toISOString","addEntry","react_default","a","react","className","reactstrap_es","onSubmit","row","for","sm","id","placeholder","required","color","onClick","connect","dispatch","actions","Header","toggle","setState","isOpen","state","clickHandler","isPortal","onCancelHandler","onChangeHandler","search","onFindHandler","onFind","light","expand","href","navbar","addonType","onChange","components_Portal_Portal","components_NewIssue_NewIssue","React","str","Spinner","ticket","summary","description","onClickHandler","EditTicket","getTicket","_this$props","dbTickets","i","onChangeModel","defineProperty","_this$props2","sM","model","status","severity","updated","created","editTicket","edited","_this$props3","db","tickets","TicketsBucket","openedId","onClickTicket","getTickets","res","tks","ticketsIds","includes","push","Ticket","key","title","components_EditTicket_EditTicket","ownProps","buckets","Tickets","history","action","fetchDb","components_Header_Header","isLoading","components_Spinner_Spinner","components_TicketsBucket_TicketsBucket","loading","Login","email","emailInput","current","password","passwordInput","_arr","keys","users","_i","length","item","emailInvalid","passwordInvalid","username1@gmail.com","username2@gmail.com","createRef","innerRef","invalid","withRouter","App","Switch","Route","path","exact","component","getSelectedIDs","filteredTickets","ticketsIDs","open","progress","done","getBucketsContent","filter","arguments","undefined","indexOf","dbReducer","initialState","handlers","createReducer","dbError","_createReducer","_ref","newBuckets","objectSpread","_ref2","newItem","_ref3","_ref4","_ref5","_ref6","newTickets","combineReducers","instance","axios","create","baseURL","fetchDatabaseApi","method","mode","headers","Access-Control-Allow-Origin","Content-Type","withCredentials","setNewEntryApi","editEntryApi","concat","fetchDatabaseSaga","setNewEntrySaga","editEntrySaga","regenerator_default","wrap","_context","prev","next","put","sent","dataArray","t0","actionTypes","message","stop","_marked","result","_context2","_marked2","_context3","_marked3","watchSaga","takeEvery","takeLatest","saga_marked","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","store","createStore","reducers","applyMiddleware","run","ReactDOM","render","es","BrowserRouter","src_components_App"],"mappings":"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","file":"static/js/main.8edfa90a.chunk.js","sourcesContent":["import {Component} from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport './style.scss';\r\n\r\nconst portalRoot = document.getElementById('portal');\r\n\r\nclass Portal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.el = document.createElement('div');\r\n    this.el.classList.add('portal-wrapper');\r\n    this.elin = document.createElement('div');\r\n    this.elin.classList.add('portal');\r\n    this.el.appendChild(this.elin);\r\n  }\r\n  \r\n  componentDidMount() {\r\n    portalRoot.appendChild(this.el);\r\n  };\r\n  \r\n  componentWillUnmount() {\r\n    portalRoot.removeChild(this.el);\r\n  }\r\n  \r\n  render() {\r\n    const {children} = this.props;\r\n    return ReactDom.createPortal(children, this.el);\r\n  }\r\n}\r\n\r\nexport default Portal;\r\n","export const DB_FETCH = \"DB_FETCH\";\r\nexport const DB_FETCH_SUCCESS = \"DB_FETCH_SUCCESS\";\r\nexport const DB_FETCH_FAILED = \"DB_FETCH_FAILED\";\r\n\r\nexport const DB_ADD_NEW_ENTRY = \"DB_ADD_NEW_ENTRY\";\r\nexport const DB_ADD_NEW_ENTRY_SUCCESS = \"DB_ADD_NEW_ENTRY_SUCCESS\";\r\nexport const DB_ADD_NEW_ENTRY_FAILED = \"DB_ADD_NEW_ENTRY_FAILED\";\r\n\r\nexport const DB_EDIT_ITEM = \"DB_EDIT_ITEM\";\r\nexport const DB_EDIT_ITEM_SUCCESS = \"DB_EDIT_ITEM_SUCCESS\";\r\nexport const DB_EDIT_ITEM_FAILED = \"DB_EDIT_ITEM_FAILED\";\r\nexport const DB_SET_ERROR = \"DB_SET_ERROR\";\r\n\r\nexport const SET_LOADING = \"SET_LOADING\";\r\nexport const ON_FIND_TICKETS = \"ON_FIND_TICKETS\";\r\n\r\n\r\n","import * as types from '../../store/actionTypes'\r\n\r\nexport function fetchDB() {\r\n  return{\r\n    type: types.DB_FETCH\r\n  }\r\n}\r\n\r\nexport function addDBEntry(data) {\r\n  return {\r\n    type: types.DB_ADD_NEW_ENTRY,\r\n    payload: data\r\n  }\r\n}\r\n\r\nexport function editDBItem(data) {\r\n  return {\r\n    type: types.DB_EDIT_ITEM,\r\n    payload: data\r\n  }\r\n}\r\n\r\nexport function editEntryInStore(data) {\r\n  return {\r\n    type: types.DB_EDIT_ITEM_SUCCESS,\r\n    payload: data\r\n  }\r\n  \r\n}\r\n\r\nexport function setDatabaseToStore(dataArray) {\r\n  return {\r\n    type: types.DB_FETCH_SUCCESS,\r\n    payload: dataArray\r\n  }\r\n}\r\n\r\nexport function addNewEntryToStore(data) {\r\n  return {\r\n    type: types.DB_ADD_NEW_ENTRY_SUCCESS,\r\n    payload: data\r\n  }\r\n}\r\n\r\nexport function setLoading(status) {\r\n  return {\r\n    type: types.SET_LOADING,\r\n    payload: status\r\n  }\r\n}\r\n\r\nexport function onFindTickets(str) {\r\n  return {\r\n    type: types.ON_FIND_TICKETS,\r\n    payload: str\r\n  }\r\n}\r\n\r\n","import React, {Component, Fragment} from 'react';\r\nimport {Input, Form, FormGroup, Label, Col, Button} from 'reactstrap';\r\nimport './style.scss';\r\nimport * as actions from \"../../store/actions/dbActions\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass NewIssue extends Component {\r\n  \r\n  submitForm = (e) => {\r\n    e.preventDefault();\r\n    const obj = {};\r\n    const {onCancel} = this.props;\r\n    \r\n    for (let input in e.target) {\r\n      if (e.target.hasOwnProperty(input)) {\r\n        switch (e.target[input].name) {\r\n          case 'summary':\r\n            obj['summary'] = e.target[input].value;\r\n            break;\r\n          case 'description':\r\n            obj['description'] = e.target[input].value;\r\n            break;\r\n          case 'severity':\r\n            obj['severity'] = e.target[input].value;\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }\r\n    obj['status'] = \"open\";\r\n    obj['updated'] = \"\";\r\n    obj['created'] = new Date().toISOString();\r\n    this.props.addEntry(obj);\r\n    onCancel()\r\n  };\r\n  \r\n  render() {\r\n    const {onCancel} = this.props;\r\n    return (\r\n      <Fragment>\r\n        <div className=\"form-wrapper\">\r\n          <div className=\"newissue-header\">New Issue</div>\r\n          <Form onSubmit={this.submitForm}>\r\n            <FormGroup row>\r\n              <Label for=\"summary\" sm={2}>Summary</Label>\r\n              <Col sm={10}>\r\n                <Input className=\"ml-2\" type=\"text\" name=\"summary\" id=\"summary\" placeholder=\"Summary...\" required/>\r\n              </Col>\r\n            </FormGroup>\r\n            <FormGroup row>\r\n              <Label for=\"description\" sm={2}>Description</Label>\r\n              <Col sm={10}>\r\n                <Input className=\"ml-2\" type=\"textarea\" name=\"description\" id=\"description\"\r\n                       placeholder=\"Description ...\" required/>\r\n              </Col>\r\n            </FormGroup>\r\n            <FormGroup row>\r\n              <Label for=\"severity\" sm={2}>Severity</Label>\r\n              <Col sm={10}>\r\n                <Input className=\"ml-2\" type=\"select\" name=\"severity\" id=\"severity\">\r\n                  <option>High</option>\r\n                  <option>Medium</option>\r\n                  <option>Low</option>\r\n                </Input>\r\n              </Col>\r\n            </FormGroup>\r\n            <Button className=\"mr-2\" type=\"submit\" color=\"primary\">Save</Button>\r\n            <Button onClick={onCancel}>Cancel</Button>\r\n          </Form>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addEntry: (data) => dispatch(actions.addDBEntry(data))\r\n  }\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(NewIssue);\r\n","import React, {Fragment} from 'react';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink, Button, InputGroup, InputGroupAddon, Input\r\n} from 'reactstrap';\r\nimport Portal from '../Portal';\r\nimport NewIssue from \"../NewIssue\";\r\nimport './style.scss';\r\nimport {connect} from \"react-redux\";\r\nimport * as actions from \"../../store/actions/dbActions\";\r\n\r\nclass Header extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isOpen: false,\r\n      isPortal: false,\r\n      search: \"\"\r\n    };\r\n  }\r\n  \r\n  toggle = () => {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  };\r\n  \r\n  clickHandler = () => {\r\n    this.setState({isPortal: true})\r\n  };\r\n  \r\n  onCancelHandler = () => {\r\n    this.setState({isPortal: false})\r\n  };\r\n  \r\n  onChangeHandler = (e) => {\r\n    this.setState({search: e.target.value})\r\n  };\r\n  \r\n  onFindHandler = () => {\r\n    this.props.onFind(this.state.search);\r\n  };\r\n  \r\n  \r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Navbar light expand=\"md\" className=\"navbaradd\">\r\n          <NavbarBrand href=\"/\"><h1>Like-Jira</h1></NavbarBrand>\r\n          <NavbarToggler onClick={this.toggle}/>\r\n          <Collapse isOpen={this.state.isOpen} navbar>\r\n            <Nav className=\"ml-auto\" navbar>\r\n              <NavItem>\r\n                <NavLink color=\"link\" href=\"https://github.com/vadimled/like-jira\">GitHub</NavLink>\r\n              </NavItem>\r\n              <NavItem className=\"ml-3\">\r\n                <Button color=\"success\" onClick={this.clickHandler}>Create</Button>\r\n              </NavItem>\r\n              <NavItem className=\"ml-3\">\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <Button onClick={this.onFindHandler}>Find</Button>\r\n                  </InputGroupAddon>\r\n                  <Input placeholder=\"Search...\" onChange={this.onChangeHandler}/>\r\n                </InputGroup>\r\n              </NavItem>\r\n            </Nav>\r\n          </Collapse>\r\n        </Navbar>\r\n        {\r\n          this.state.isPortal &&\r\n          <Portal>\r\n            <NewIssue onCancel={this.onCancelHandler}/>\r\n          </Portal>\r\n        }\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n const mapDispatchToProps = dispatch => {\r\n    return {\r\n      onFind: (str) => dispatch(actions.onFindTickets(str))\r\n    }\r\n  };\r\n  \r\nexport default connect(null, mapDispatchToProps)(Header)\r\n","import React from 'react';\r\nimport './style.scss';\r\n\r\n\r\nconst Spinner = () => {\r\n  return (\r\n  <div className=\"sk-circle\">\r\n    <div className=\"sk-circle1 sk-child\" />\r\n    <div className=\"sk-circle2 sk-child\" />\r\n    <div className=\"sk-circle3 sk-child\" />\r\n    <div className=\"sk-circle4 sk-child\" />\r\n    <div className=\"sk-circle5 sk-child\" />\r\n    <div className=\"sk-circle6 sk-child\" />\r\n    <div className=\"sk-circle7 sk-child\" />\r\n    <div className=\"sk-circle8 sk-child\" />\r\n    <div className=\"sk-circle9 sk-child\" />\r\n    <div className=\"sk-circle10 sk-child\" />\r\n    <div className=\"sk-circle11 sk-child\" />\r\n    <div className=\"sk-circle12 sk-child\" />\r\n  </div>\r\n  )\r\n};\r\n\r\nexport default Spinner;\r\n","import React, {Fragment} from \"react\";\r\nimport './style.scss';\r\nimport {Card, CardBody, CardSubtitle, CardText, CardTitle, Fade} from \"reactstrap\";\r\n\r\nconst ticket = props => {\r\n  const {summary, description, id, onClickHandler} = props;\r\n\r\n  return (\r\n    <Fragment>\r\n      <Fade className=\"card-wrapper\" onClick={(e) => onClickHandler(e, id)}>\r\n        <Card>\r\n          <CardBody>\r\n            <CardTitle>{summary}</CardTitle>\r\n            <CardText>{description}</CardText>\r\n            <CardSubtitle><span>ID</span>{id}</CardSubtitle>\r\n          </CardBody>\r\n        </Card>\r\n      </Fade>\r\n    </Fragment>\r\n  )\r\n};\r\n\r\nexport default ticket;\r\n","import React, {Component, Fragment} from 'react';\r\nimport {Input, Form, FormGroup, Label, Col, Button, Badge} from 'reactstrap';\r\nimport './style.scss';\r\nimport * as actions from \"../../store/actions/dbActions\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass EditTicket extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.ticket = this.getTicket();\r\n    this.state = {\r\n        status: null,\r\n        severity: null,\r\n        summary: null,\r\n        description: null,\r\n        created: null,\r\n        updated: null\r\n    }\r\n  }\r\n  \r\n  getTicket = () => {\r\n    const {dbTickets, id} = this.props;\r\n    for (let i in dbTickets) {\r\n      if (i === id) {\r\n        return dbTickets[i]\r\n      }\r\n    }\r\n    return undefined;\r\n  };\r\n  \r\n  onChangeModel = e => {\r\n    e.target.value !== \"\" && this.setState({[e.target.name]: e.target.value});\r\n  };\r\n  \r\n  submitForm = (e) => {\r\n    e.preventDefault();\r\n    const {onCancel, id} = this.props;\r\n    const data = new Date().toISOString();\r\n    const sM = this.state;\r\n    \r\n    const model = {\r\n      status: !sM.status ? this.ticket.status : sM.status,\r\n      severity: !sM.severity ? this.ticket.severity :sM.severity,\r\n      summary: !sM.summary ? this.ticket.summary : sM.summary,\r\n      description: !sM.description ? this.ticket.description : sM.description,\r\n      updated: data,\r\n      created: this.ticket.created\r\n    };\r\n    this.props.editTicket({edited: model, id});\r\n    onCancel()\r\n  };\r\n  \r\n  render() {\r\n    const {onCancel, id} = this.props;\r\n    return (\r\n      <Fragment>\r\n        <div className=\"form-wrapper\">\r\n          <div className=\"edit-header\">Edit Ticket<Badge className=\"ml-4\" color=\"secondary\">ID{id}</Badge>\r\n          </div>\r\n          \r\n          <Form onSubmit={this.submitForm}>\r\n            <p>Created <Badge color=\"secondary\">{this.ticket.created}</Badge></p>\r\n            <p>Updated <Badge color=\"secondary\"  className=\"mb-2\">{this.ticket.updated}</Badge></p>\r\n            <FormGroup row>\r\n              <Label for=\"summary\" sm={2}>Summary</Label>\r\n              <Col sm={10}>\r\n                <Input className=\"ml-2\" type=\"text\" name=\"summary\" id=\"summary\"\r\n                       value={this.state.summary || this.ticket.summary}\r\n                       onChange={this.onChangeModel}\r\n                       placeholder=\"Summary...\"/>\r\n              </Col>\r\n            </FormGroup>\r\n            <FormGroup row>\r\n              <Label for=\"description\" sm={2}>Description</Label>\r\n              <Col sm={10}>\r\n                <Input className=\"ml-2\" type=\"textarea\" name=\"description\" id=\"description\"\r\n                       value={this.state.description || this.ticket.description}\r\n                       onChange={this.onChangeModel}\r\n                       placeholder=\"Description ...\"/>\r\n              </Col>\r\n            </FormGroup>\r\n            <FormGroup row>\r\n              <Label for=\"severity\" sm={2}>Severity</Label>\r\n              <Col sm={10}>\r\n                <Input className=\"ml-2\" type=\"select\" name=\"severity\" id=\"severity\"\r\n                       onChange={this.onChangeModel}\r\n                       value={this.state.severity || this.ticket.severity}>\r\n                  <option value=\"high\">High</option>\r\n                  <option value=\"medium\">Medium</option>\r\n                  <option value=\"low\">Low</option>\r\n                </Input>\r\n              </Col>\r\n            </FormGroup>\r\n            <FormGroup row>\r\n              <Label for=\"status\" sm={2}>Status</Label>\r\n              <Col sm={10}>\r\n                <Input className=\"ml-2\" type=\"select\" name=\"status\" id=\"status\"\r\n                       onChange={this.onChangeModel}\r\n                       value={this.state.status || this.ticket.status}>\r\n                  <option value=\"open\">Open</option>\r\n                  <option value=\"progress\">In-Progress</option>\r\n                  <option value=\"done\">Done</option>\r\n                </Input>\r\n              </Col>\r\n            </FormGroup>\r\n            <Button className=\"mr-2 mt-2\" type=\"submit\" color=\"primary\">Save</Button>\r\n            <Button className=\"mr-2 mt-2\" onClick={onCancel}>Cancel</Button>\r\n          </Form>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dbTickets: state.db.tickets\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    editTicket: (data) => dispatch(actions.editDBItem(data))\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditTicket);\r\n","import React, {Component, Fragment} from \"react\";\r\nimport './style.scss';\r\nimport {connect} from \"react-redux\";\r\nimport Ticket from '../Ticket'\r\nimport Portal from \"../Portal\";\r\nimport EditTicket from \"../EditTicket\";\r\n\r\nclass TicketsBucket extends Component {\r\n  state = {\r\n    isPortal: false,\r\n    openedId: \"\"\r\n  };\r\n  \r\n  onCancelHandler = () => {\r\n    this.setState({isPortal: false})\r\n  };\r\n  \r\n  onClickTicket = (e, id) => {\r\n    this.setState({isPortal: true, openedId: id})\r\n  };\r\n  \r\n  getTickets = () => {\r\n    let res = [];\r\n    const {tks, ticketsIds} = this.props;\r\n    \r\n    for (let ticket in tks) {\r\n      if (ticketsIds.includes(ticket)) {\r\n        res.push(<Ticket\r\n          key={ticket}\r\n          id={ticket}\r\n          onClickHandler={this.onClickTicket}\r\n          summary={tks[ticket].summary}\r\n          description={tks[ticket].description}/>)\r\n      }\r\n    }\r\n    return res;\r\n  };\r\n  \r\n  render() {\r\n    const {title} = this.props;\r\n    const tickets = this.getTickets();\r\n    return (\r\n      <Fragment>\r\n        <div className=\"wrapper\">\r\n          <div className=\"bucket\">\r\n            <h5 className=\"title\">\r\n              {title}\r\n            </h5>\r\n            <div className=\"tickets-container\">\r\n              {tickets}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {\r\n          this.state.isPortal &&\r\n          <Portal>\r\n            <EditTicket id={this.state.openedId} onCancel={this.onCancelHandler}/>\r\n          </Portal>\r\n        }\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    tks: state.db.tickets,\r\n    ticketsIds: state.db.buckets[ownProps.id]\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps)(TicketsBucket);\r\n","import React, {Component} from \"react\";\r\nimport './style.scss';\r\nimport {connect} from \"react-redux\";\r\nimport Header from \"../../components/Header\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport TicketsBucket from \"../../components/TicketsBucket\";\r\nimport * as actions from \"../../store/actions/dbActions\";\r\nimport {Col, Row} from 'reactstrap';\r\n\r\nclass Tickets extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    if(this.props.history.action === 'POP'){\r\n      this.props.history.push('/')\r\n    }\r\n    else{\r\n      this.props.fetchDb();\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <Header/>\r\n        {\r\n          this.props.isLoading ?\r\n            <Spinner/>\r\n            :\r\n            <Row>\r\n              <Col><TicketsBucket id=\"open\" title=\"Open\"/></Col>\r\n              <Col><TicketsBucket id=\"progress\" title=\"In-Progress\"/></Col>\r\n              <Col><TicketsBucket id=\"done\" title=\"Done\"/></Col>\r\n            </Row>\r\n          \r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isLoading: state.db.loading\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchDb: () => dispatch(actions.fetchDB())\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Tickets);\r\n","import React, {Component} from 'react';\r\nimport {Button, Form, FormFeedback, FormGroup, Input, Label} from 'reactstrap';\r\nimport './style.scss';\r\nimport * as actions from \"../../store/actions/dbActions\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      users: {\r\n        \"username1@gmail.com\": \"12345678\",\r\n        \"username2@gmail.com\": \"12345678\"\r\n      },\r\n      emailInvalid: false,\r\n      passwordInvalid: false\r\n    };\r\n    this.emailInput = React.createRef();\r\n    this.passwordInput = React.createRef();\r\n  }\r\n  \r\n  submitForm = (e) => {\r\n    e.preventDefault();\r\n    const\r\n      email = this.emailInput.current.value,\r\n      password = this.passwordInput.current.value;\r\n    \r\n    for (let item of Object.keys(this.state.users)) {\r\n      if (item ===  email && this.state.users[item] === password) {\r\n        this.props.history.push('/tickets');\r\n      }\r\n    }\r\n \r\n    this.setState({emailInvalid: true, passwordInvalid: true})\r\n    this.passwordInput.current.value = null;\r\n   };\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"login-wrapper\">\r\n        <div className=\"login\">\r\n          <div className=\"login-header\">Like Jira</div>\r\n          \r\n          <Form onSubmit={this.submitForm}>\r\n            <FormGroup>\r\n              <Label for=\"email\">Email</Label>\r\n              <Input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Enter email...\"\r\n                     innerRef={this.emailInput} invalid={this.state.emailInvalid}/>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"password\">Password</Label>\r\n              <Input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Enter password...\"\r\n                     innerRef={this.passwordInput} invalid={this.state.passwordInvalid}/>\r\n              <FormFeedback className=\"mb-4\">The credentials you supplied were not correct</FormFeedback>\r\n            </FormGroup>\r\n            <Button className=\"mt-2\" type=\"submit\" color=\"primary\">Login</Button>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dbTickets: state.db.tickets\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    editTicket: (data) => dispatch(actions.editDBItem(data))\r\n  }\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Login));\r\n","import React, {Component} from 'react';\nimport {Route, Switch} from 'react-router-dom';\nimport './App.scss';\nimport Tickets from \"../pages/Tickets\";\nimport Login from \"../pages/Login\";\n\nclass App extends Component {\n  \n  render() {\n    return (\n      <Switch>\n        <Route path=\"/\" exact component={Login}/>\n        <Route path=\"/tickets\" exact component={Tickets}/>\n      </Switch>\n    );\n  }\n}\n\nexport default App;\n\n","function getSelectedIDs(filteredTickets) {\r\n  let ticketsIDs = {\r\n    open: [],\r\n    progress: [],\r\n    done: []\r\n  };\r\n  for (let id in filteredTickets) {\r\n    if (filteredTickets.hasOwnProperty(id)) {\r\n      switch (filteredTickets[id].status) {\r\n        case \"open\":\r\n          ticketsIDs.open.push(id);\r\n          break;\r\n        case \"progress\":\r\n          ticketsIDs.progress.push(id);\r\n          break;\r\n        case \"done\" :\r\n          ticketsIDs.done.push(id);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }\r\n  return ticketsIDs;\r\n}\r\n\r\nexport function getBucketsContent(tickets, filter = null) {\r\n  let ticketsIDs = {\r\n    open: [],\r\n    progress: [],\r\n    done: []\r\n  };\r\n  \r\n  if (!tickets) return ticketsIDs;\r\n  \r\n  const filteredTickets = {};\r\n  \r\n  if (filter && filter.length > 0) {\r\n    for (let ticket in  tickets) {\r\n      if (tickets.hasOwnProperty(ticket)) {\r\n        if (tickets[ticket].description.indexOf(filter) !== -1 ||\r\n          tickets[ticket].summary.indexOf(filter) !== -1) {\r\n          filteredTickets[ticket] = tickets[ticket];\r\n        }\r\n      }\r\n    }\r\n  }\r\n  ticketsIDs = (Object.keys(filteredTickets).length !== 0) ? getSelectedIDs(filteredTickets) : getSelectedIDs(tickets);\r\n  \r\n  return ticketsIDs;\r\n}\r\n\r\n","import * as types from '../../store/actionTypes';\r\nimport createReducer from '../../store/reducers/createReducer';\r\nimport {getBucketsContent} from \"../../utils/dbHandlers\";\r\n\r\nconst initialState = {\r\n  tickets: {},\r\n  buckets: {\r\n    open: [],\r\n    progress: [],\r\n    done: []\r\n  },\r\n  loading: false,\r\n  dbError: {}\r\n};\r\n\r\nconst dbReducer = createReducer(initialState, {\r\n  [types.DB_FETCH_SUCCESS]: (state, {type, payload}) => {\r\n    const newBuckets = getBucketsContent(payload);\r\n    return {\r\n      ...state,\r\n      tickets: {...payload},\r\n      buckets: {...newBuckets},\r\n      loading: false\r\n    }\r\n  },\r\n  [types.DB_ADD_NEW_ENTRY_SUCCESS]: (state, {type, payload}) => {\r\n    const newItem = {...state.tickets, [payload.id]: payload.data};\r\n    const newBuckets = getBucketsContent(newItem);\r\n    return {\r\n      ...state,\r\n      tickets: newItem,\r\n      buckets: {...newBuckets}\r\n    }\r\n  },\r\n  [types.DB_SET_ERROR]: (state, {type, payload}) => {\r\n    return {\r\n      ...state,\r\n      dbError: {...state.dbError, ...{[payload]: payload}}\r\n    }\r\n  },\r\n  [types.SET_LOADING]: (state, {type, payload}) => {\r\n    return {\r\n      ...state,\r\n      loading: payload\r\n    }\r\n  },\r\n  [types.ON_FIND_TICKETS]: (state, {type, payload}) => {\r\n    const newBuckets = getBucketsContent(state.tickets, payload);\r\n     return {\r\n      ...state,\r\n      buckets: {...newBuckets},\r\n    }\r\n  },\r\n  [types.DB_EDIT_ITEM_SUCCESS]: (state, {type, payload}) => {\r\n    const newTickets = {...state.tickets, [payload.id]: payload.edited};\r\n    const newBuckets = getBucketsContent(newTickets);\r\n     return {\r\n      ...state,\r\n      tickets: newTickets,\r\n      buckets: {...newBuckets},\r\n    }\r\n  }\r\n});\r\n\r\nexport default dbReducer;\r\n","export default function createReducer(initialState, handlers) {\r\n  return function reducer(state = initialState, action) {\r\n    if (handlers.hasOwnProperty(action.type)) {\r\n      return handlers[action.type](state, action)\r\n    } else {\r\n      return state\r\n    }\r\n  }\r\n}\r\n","import {combineReducers} from \"redux\";\r\nimport dbReducer from './dbReducer';\r\n\r\nexport default combineReducers({\r\n  db: dbReducer\r\n})\r\n","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://like-jira.firebaseio.com/'\n});\n\nexport default instance;\n","import axios from \"../store/axios-orders\";\r\n\r\nexport const fetchDatabaseApi = () => {\r\n    return axios('/db.json', {\r\n        method: 'GET',\r\n        mode: 'no-cors',\r\n        headers: {\r\n            'Access-Control-Allow-Origin': '*',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        withCredentials: false\r\n    })\r\n};\r\n\r\nexport const setNewEntryApi = (data) => {\r\n    return axios(`/db.json`, {\r\n        method: 'POST',\r\n        data,\r\n        headers: {\r\n            'Access-Control-Allow-Origin': '*',\r\n            'Content-Type': 'application/json',\r\n        }\r\n    })\r\n};\r\n\r\nexport const deleteEntryApi = (id) => {\r\n    return axios(`/db/${id}.json`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Access-Control-Allow-Origin': '*',\r\n            'Content-Type': 'application/json',\r\n        }\r\n    });\r\n};\r\n\r\nexport const editEntryApi = (data) => {\r\n    return axios(`/db/${data.id}.json`, {\r\n        method: 'PUT',\r\n        data: data.edited,\r\n        headers: {\r\n            'Access-Control-Allow-Origin': '*',\r\n            'Content-Type': 'application/json',\r\n        }\r\n    });\r\n};\r\n","import {call, put} from 'redux-saga/effects';\r\nimport * as actions from \"../actions/dbActions\";\r\nimport * as actionTypes from \"../actionTypes\";\r\nimport {editEntryApi, fetchDatabaseApi, setNewEntryApi} from \"../../Api\";\r\n\r\nexport function* fetchDatabaseSaga() {\r\n    try {\r\n        yield put(actions.setLoading(true));\r\n        const db = yield call(fetchDatabaseApi);\r\n        yield put(actions.setDatabaseToStore(db.data));\r\n    } catch (error) {\r\n        yield put({type: actionTypes.DB_FETCH_FAILED, payload: error.message});\r\n    }\r\n}\r\n\r\nexport function* setNewEntrySaga(action) {\r\n    try {\r\n        const result = yield call(setNewEntryApi, action.payload);\r\n        const id = result.data.name;\r\n        yield put(actions.addNewEntryToStore({id, data: action.payload}))\r\n    } catch (error) {\r\n        yield put({type: actionTypes.DB_ADD_NEW_ENTRY_FAILED, payload: error.message});\r\n    }\r\n}\r\n\r\nexport function* editEntrySaga(action) {\r\n    try {\r\n        yield call(editEntryApi, action.payload);\r\n        yield put(actions.editEntryInStore((action.payload)));\r\n    } catch (error) {\r\n        yield put({type: actionTypes.DB_EDIT_ITEM_FAILED, payload: error.message});\r\n    }\r\n}\r\n\r\n","import {takeEvery, takeLatest} from \"redux-saga/effects\";\r\nimport * as actionTypes from \"../actionTypes\";\r\nimport {\r\n    fetchDatabaseSaga,\r\n    setNewEntrySaga,\r\n    editEntrySaga\r\n} from \"../saga/sagas\";\r\n\r\nexport function* watchSaga() {\r\n    yield takeEvery(actionTypes.DB_FETCH, fetchDatabaseSaga);\r\n    yield takeLatest(actionTypes.DB_ADD_NEW_ENTRY, setNewEntrySaga);\r\n    yield takeLatest(actionTypes.DB_EDIT_ITEM, editEntrySaga);\r\n }\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport {Provider} from \"react-redux\";\r\nimport reducers from \"./store/reducers\";\r\nimport {applyMiddleware, compose,createStore} from \"redux\";\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport {watchSaga} from './store/saga';\r\n\r\nconst\r\n  composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose,\r\n  sagaMiddleware = createSagaMiddleware(),\r\n  store = createStore(reducers, composeEnhancers(applyMiddleware(sagaMiddleware)));\r\n\r\nsagaMiddleware.run(watchSaga);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById('root'));\r\n"],"sourceRoot":""}